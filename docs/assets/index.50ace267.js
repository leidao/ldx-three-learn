var v=Object.defineProperty;var D=(d,e,t)=>e in d?v(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var w=(d,e,t)=>(D(d,typeof e!="symbol"?e+"":e,t),t);import{r as _,j as T}from"./index.f88ef442.js";import{L as C,F as A,O as I,B as P,C as E,e as R,aq as S,s as O,ar as U,as as x,c as N}from"./index.577fe09e.js";import{G as M}from"./GLTFLoader.76bc84bc.js";const k=new WeakMap;class F extends C{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,a,s){const o=new A(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,r=>{const i={attributeIDs:this.defaultAttributeIDs,attributeTypes:this.defaultAttributeTypes,useUniqueIDs:!1};this.decodeGeometry(r,i).then(t).catch(s)},a,s)}decodeDracoFile(e,t,a,s){const o={attributeIDs:a||this.defaultAttributeIDs,attributeTypes:s||this.defaultAttributeTypes,useUniqueIDs:!!a};this.decodeGeometry(e,o).then(t)}decodeGeometry(e,t){for(const n in t.attributeTypes){const f=t.attributeTypes[n];f.BYTES_PER_ELEMENT!==void 0&&(t.attributeTypes[n]=f.name)}const a=JSON.stringify(t);if(k.has(e)){const n=k.get(e);if(n.key===a)return n.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let s;const o=this.workerNextTaskID++,r=e.byteLength,i=this._getWorker(o,r).then(n=>(s=n,new Promise((f,l)=>{s._callbacks[o]={resolve:f,reject:l},s.postMessage({type:"decode",id:o,taskConfig:t,buffer:e},[e])}))).then(n=>this._createGeometry(n.geometry));return i.catch(()=>!0).then(()=>{s&&o&&this._releaseTask(s,o)}),k.set(e,{key:a,promise:i}),i}_createGeometry(e){const t=new I;e.index&&t.setIndex(new P(e.index.array,1));for(let a=0;a<e.attributes.length;a++){const s=e.attributes[a],o=s.name,r=s.array,i=s.itemSize;t.setAttribute(o,new P(r,i))}return t}_loadLibrary(e,t){const a=new A(this.manager);return a.setPath(this.decoderPath),a.setResponseType(t),a.setWithCredentials(this.withCredentials),new Promise((s,o)=>{a.load(e,s,void 0,o)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then(a=>{const s=a[0];e||(this.decoderConfig.wasmBinary=a[1]);const o=G.toString(),r=["/* draco decoder */",s,"","/* worker */",o.substring(o.indexOf("{")+1,o.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([r]))}),this.decoderPending}_getWorker(e,t){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const s=new Worker(this.workerSourceURL);s._callbacks={},s._taskCosts={},s._taskLoad=0,s.postMessage({type:"init",decoderConfig:this.decoderConfig}),s.onmessage=function(o){const r=o.data;switch(r.type){case"decode":s._callbacks[r.id].resolve(r);break;case"error":s._callbacks[r.id].reject(r);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+r.type+'"')}},this.workerPool.push(s)}else this.workerPool.sort(function(s,o){return s._taskLoad>o._taskLoad?-1:1});const a=this.workerPool[this.workerPool.length-1];return a._taskCosts[e]=t,a._taskLoad+=t,a})}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this}}function G(){let d,e;onmessage=function(r){const i=r.data;switch(i.type){case"init":d=i.decoderConfig,e=new Promise(function(l){d.onModuleLoaded=function(h){l({draco:h})},DracoDecoderModule(d)});break;case"decode":const n=i.buffer,f=i.taskConfig;e.then(l=>{const h=l.draco,c=new h.Decoder,m=new h.DecoderBuffer;m.Init(new Int8Array(n),n.byteLength);try{const u=t(h,c,m,f),g=u.attributes.map(y=>y.array.buffer);u.index&&g.push(u.index.array.buffer),self.postMessage({type:"decode",id:i.id,geometry:u},g)}catch(u){console.error(u),self.postMessage({type:"error",id:i.id,error:u.message})}finally{h.destroy(m),h.destroy(c)}});break}};function t(r,i,n,f){const l=f.attributeIDs,h=f.attributeTypes;let c,m;const u=i.GetEncodedGeometryType(n);if(u===r.TRIANGULAR_MESH)c=new r.Mesh,m=i.DecodeBufferToMesh(n,c);else if(u===r.POINT_CLOUD)c=new r.PointCloud,m=i.DecodeBufferToPointCloud(n,c);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!m.ok()||c.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+m.error_msg());const g={index:null,attributes:[]};for(const y in l){const p=self[h[y]];let b,L;if(f.useUniqueIDs)L=l[y],b=i.GetAttributeByUniqueId(c,L);else{if(L=i.GetAttributeId(c,r[l[y]]),L===-1)continue;b=i.GetAttribute(c,L)}g.attributes.push(s(r,i,c,y,p,b))}return u===r.TRIANGULAR_MESH&&(g.index=a(r,i,c)),r.destroy(c),g}function a(r,i,n){const l=n.num_faces()*3,h=l*4,c=r._malloc(h);i.GetTrianglesUInt32Array(n,h,c);const m=new Uint32Array(r.HEAPF32.buffer,c,l).slice();return r._free(c),{array:m,itemSize:1}}function s(r,i,n,f,l,h){const c=h.num_components(),u=n.num_points()*c,g=u*l.BYTES_PER_ELEMENT,y=o(r,l),p=r._malloc(g);i.GetAttributeDataArrayForAllPoints(n,h,y,g,p);const b=new l(r.HEAPF32.buffer,p,u).slice();return r._free(p),{name:f,array:b,itemSize:c}}function o(r,i){switch(i){case Float32Array:return r.DT_FLOAT32;case Int8Array:return r.DT_INT8;case Int16Array:return r.DT_INT16;case Int32Array:return r.DT_INT32;case Uint8Array:return r.DT_UINT8;case Uint16Array:return r.DT_UINT16;case Uint32Array:return r.DT_UINT32}}}class H{constructor(e){w(this,"game");w(this,"viewer");this.game=e,this.viewer=e.viewer,this.load()}load(){this.game.gltfLoader.setPath("factory/glb/");const e=new F(this.viewer.loadmanager);e.setDecoderPath("factory/draco/"),this.game.gltfLoader.setDRACOLoader(e),this.game.gltfLoader.load("swat-guy2.glb",t=>{this.viewer.scene.add(t.scene),this.game.render()},t=>{this.viewer.onProgress("swat-guy2.glb",t)})}initNpcs(){}}class B{constructor(e){w(this,"clock");w(this,"viewer");w(this,"gltfLoader");w(this,"factory");w(this,"fans",[]);w(this,"navMesh");w(this,"npcHandler");w(this,"update",()=>{const e=this.clock.getDelta();this.fans.forEach(t=>t.rotateY(e)),this.render()});this.viewer=e,e.useLoadingManager(),this.clock=new E,this.gltfLoader=new M(e.loadmanager),this.init(),this.loadFactory(),this.npcHandler=new H(this)}init(){this.viewer.scene.background=new R(2102544),this.viewer.scene.fog=new S(2102544,100,200),this.viewer.renderer.outputEncoding=O,this.viewer.camera.position.set(0,60,20),this.viewer.camera.lookAt(0,0,-10),this.viewer.renderer.shadowMap.enabled=!0;const t=new U(16777215,12303359,1);this.viewer.scene.add(t),this.viewer.directionalLight.position.set(0,20,20),this.viewer.directionalLight.target.position.set(-2,0,0),this.viewer.directionalLight.castShadow=!0,this.viewer.directionalLight.shadow.mapSize.set(1024,512),this.viewer.directionalLight.shadow.camera.near=.5,this.viewer.directionalLight.shadow.camera.far=50;const a=30;this.viewer.directionalLight.shadow.camera.left=-a,this.viewer.directionalLight.shadow.camera.right=a,this.viewer.directionalLight.shadow.camera.top=a,this.viewer.directionalLight.shadow.camera.bottom=-a*.25;const s=new x(this.viewer.directionalLight.shadow.camera);this.viewer.scene.add(s)}render(){this.viewer.render()}loadFactory(){this.gltfLoader.setPath("factory/glb/"),this.gltfLoader.load("factory2.glb",e=>{this.factory=e.scene,this.viewer.scene.add(this.factory),this.fans=[],this.factory.traverse(t=>{t.isMesh&&(t.name==="NavMesh"?(this.navMesh=t,t.material.transparent=!0,t.material.opacity=.5,t.material.wireframe=!0):t.name.includes("fan")?this.fans.push(t):t.material.name.includes("elements2")||t.material.name.includes("elements5")||t.material.name.includes("terrain")?t.castShadow=!0:t.material.name.includes("sand")?t.receiveShadow=!0:t.material.name.includes("elements1")?(t.castShadow=!0,t.receiveShadow=!0):t.parent.name.includes("main")&&(t.castShadow=!0))}),this.viewer.scene.add(this.navMesh),this.render()},e=>{this.viewer.onProgress("factory.glb",e)})}}const Y=()=>{const d=_.exports.useRef(null);return _.exports.useEffect(()=>{if(!d.current)return;const e=new N(d.current);e.useOrbitControls(),e.listen();const t=new B(e);let a;const s=()=>{t.update(),a=requestAnimationFrame(s)};return s(),()=>{cancelIdleCallback(a)}},[]),T("div",{className:"w-100% h-100% relative",children:T("div",{className:"gunplay w-100% h-100%",ref:d})})};export{Y as default};
